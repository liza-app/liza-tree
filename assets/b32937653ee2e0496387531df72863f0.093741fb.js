import{u as e,d as l}from"./index.2b004346.js";import{_ as n}from"./DocTemplateBase.3230dea8.js";import{h as d,I as a,k as o,v as r,n as t,t as i,p as s,w as u,z as c}from"./vendor.92220208.js";const g={extends:n,setup(){const n=a(),o=[{name:"BaseTree",id:"basetree",children:[{name:"props",id:"props",children:[{name:"idKey",id:"idkey",children:[]},{name:"parentIdKey",id:"parentidkey",children:[]},{name:"childrenKey",id:"childrenkey",children:[]},{name:"textKey",id:"textkey",children:[]},{name:"flatData",id:"flatdata",children:[]},{name:"treeData",id:"treedata",children:[]},{name:"indent",id:"indent",children:[]},{name:"gap",id:"gap",children:[]},{name:"rtl",id:"rtl",children:[]},{name:"virtualization",id:"virtualization",children:[]},{name:"virtualizationPrerender",id:"virtualizationprerender",children:[]},{name:"childrenLazyLoading",id:"childrenlazyloading",children:[]},{name:"childrenLoader",id:"childrenloader",children:[]},{name:"defaultFolded",id:"defaultfolded",children:[]}]},{name:"data",id:"data",children:[{name:"nodes",id:"nodes",children:[]},{name:"nodesByID",id:"nodesbyid",children:[]},{name:"trees",id:"trees",children:[]},{name:"dragging",id:"dragging",children:[]},{name:"treeID",id:"treeid",children:[]},{name:"tree",id:"tree",children:[]}]},{name:"computed",id:"computed",children:[{name:"visibleNodes",id:"visiblenodes",children:[]}]},{name:"events",id:"events",children:[{name:"fold",id:"fold",children:[]},{name:"unfold",id:"unfold",children:[]},{name:"load-children",id:"load-children",children:[]},{name:"load-children-success",id:"load-children-success",children:[]},{name:"load-children-error",id:"load-children-error",children:[]}]},{name:"methods",id:"methods",children:[{name:"countChildren",id:"countchildren",children:[]},{name:"addNode",id:"addnode",children:[]},{name:"moveNode",id:"movenode",children:[]},{name:"removeNode",id:"removenode",children:[]},{name:"outputNestedData",id:"outputnesteddata",children:[]},{name:"outputFlatData",id:"outputflatdata",children:[]},{name:"isNodeParentFolded",id:"isnodeparentfolded",children:[]},{name:"isNodeVisible",id:"isnodevisible",children:[]},{name:"foldAll",id:"foldall",children:[]},{name:"unfoldAll",id:"unfoldall",children:[]},{name:"unfold",id:"unfold-1",children:[]},{name:"toggleFold",id:"togglefold",children:[]},{name:"updateChecked",id:"updatechecked",children:[]},{name:"getAllCheckedNodes",id:"getallcheckednodes",children:[]}]}]},{name:"Draggable",id:"draggable",children:[{name:"props",id:"props-1",children:[{name:"triggerClass",id:"triggerclass",children:[]},{name:"triggerBySelf",id:"triggerbyself",children:[]},{name:"draggable",id:"draggable-1",children:[]},{name:"droppable",id:"droppable",children:[]},{name:"eachDraggable",id:"eachdraggable",children:[]},{name:"eachDroppable",id:"eachdroppable",children:[]},{name:"rootDraggable",id:"rootdraggable",children:[]},{name:"rootDroppable",id:"rootdroppable",children:[]},{name:"ondragstart",id:"ondragstart",children:[]},{name:"ondragend",id:"ondragend",children:[]},{name:"afterPlaceholderCreated",id:"afterplaceholdercreated",children:[]},{name:"placeholderMaxHeight",id:"placeholdermaxheight",children:[]},{name:"unfoldWhenDragover",id:"unfoldwhendragover",children:[]},{name:"unfoldWhenDragoverDelay",id:"unfoldwhendragoverdelay",children:[]},{name:"isNodeUnfoldable",id:"isnodeunfoldable",children:[]},{name:"draggingNodePositionMode",id:"draggingnodepositionmode",children:[]},{name:"preventTextSelection",id:"preventtextselection",children:[]},{name:"edgeScroll",id:"edgescroll",children:[]},{name:"edgeScrollTriggerMargin",id:"edgescrolltriggermargin",children:[]},{name:"edgeScrollSpeed",id:"edgescrollspeed",children:[]},{name:"edgeScrollTriggerMode",id:"edgescrolltriggermode",children:[]},{name:"edgeScrollSpecifiedContainerX",id:"edgescrollspecifiedcontainerx",children:[]},{name:"edgeScrollSpecifiedContainerY",id:"edgescrollspecifiedcontainery",children:[]}]},{name:"data",id:"data-1",children:[{name:"draggingNode",id:"draggingnode",children:[]},{name:"store",id:"store",children:[]}]},{name:"events",id:"events-1",children:[{name:"drag",id:"drag",children:[]},{name:"before-first-move",id:"before-first-move",children:[]},{name:"drop",id:"drop",children:[]},{name:"drop-into",id:"drop-into",children:[]},{name:"drop-change",id:"drop-change",children:[]}]},{name:"methods",id:"methods-1",children:[{name:"isParentDragging",id:"isparentdragging",children:[]}]}]},{name:"Other",id:"other",children:[{name:"Draggable",id:"draggable-2",children:[]},{name:"eachDraggableFunc",id:"eachdraggablefunc",children:[]},{name:"PositionMode",id:"positionmode",children:[]},{name:"Store3",id:"store3",children:[]},{name:"EventPosition",id:"eventposition",children:[]},{name:"EventPosition2",id:"eventposition2",children:[]},{name:"obj",id:"obj",children:[]},{name:"BaseNode",id:"basenode",children:[]},{name:"Node",id:"node",children:[]}]}];e("API",n),l.value=o,d((()=>{l.value=null}))}},p={class:"docs-view"},f={class:"article mt-14 mb-8 prose"},h=c("API"),m=c("BaseTree"),v=c("props"),b=c("idKey"),_=i("pre",null,[i("code",{class:"language-ts"},'{ type: String, default: "id" }\n')],-1),y=c("parentIdKey"),N=i("pre",null,[i("code",{class:"language-ts"},'{ type: String, default: "parent_id" }\n')],-1),S=c("childrenKey"),D=i("pre",null,[i("code",{class:"language-ts"},'{ type: String, default: "children" }\n')],-1),P=c("textKey"),E=i("pre",null,[i("code",{class:"language-ts"},'{ type: String, default: "text" }\n')],-1),T=c("flatData"),M=i("pre",null,[i("code",{class:"language-ts"},"{\n  type: Array\n}\n")],-1),B=c("treeData"),k=i("pre",null,[i("code",{class:"language-ts"},"{\n  type: Array\n}\n")],-1),x=c("indent"),L=i("pre",null,[i("code",{class:"language-ts"},"{ type: Number, default: 20 }\n")],-1),C=c("gap"),F=i("pre",null,[i("code",{class:"language-ts"},"{\n  type: Number\n}\n")],-1),H=c("rtl"),$=i("pre",null,[i("code",{class:"language-ts"},"{ type: Boolean, default: false }\n")],-1),I=c("virtualization"),w=i("pre",null,[i("code",{class:"language-ts"},"{ type: Boolean, default: false }\n")],-1),z=c("virtualizationPrerender"),A=i("pre",null,[i("code",{class:"language-ts"},"{ type: Number, default: 20 }\n")],-1),j=c("childrenLazyLoading"),K=i("pre",null,[i("code",{class:"language-ts"},"{ type: Boolean, default: false }\n")],-1),O=c("childrenLoader"),R=i("pre",null,[i("code",{class:"language-ts"},"(\n  node: Node,\n  vm: ComponentPublicInstance\n) => Promise<Node[]>;\n")],-1),X=c("defaultFolded"),Y=i("pre",null,[i("code",{class:"language-ts"},"{ type: Boolean, default: false }\n")],-1),V=c("data"),W=c("nodes"),U=i("pre",null,[i("code",{class:"language-ts"},"Node[]\n")],-1),q=c("nodesByID"),G=i("pre",null,[i("code",{class:"language-ts"},"Record<string, Node>\n")],-1),J=c("trees"),Q=i("pre",null,[i("code",{class:"language-ts"},"{[treeID:string]: Node}\n")],-1),Z=c("dragging"),ee=i("pre",null,[i("code",{class:"language-ts"},"boolean\n")],-1),le=c("treeID"),ne=i("pre",null,[i("code",{class:"language-ts"},"string\n")],-1),de=c("tree"),ae=i("p",null,"vm of tree",-1),oe=i("pre",null,[i("code",{class:"language-ts"},"this\n")],-1),re=c("computed"),te=c("visibleNodes"),ie=i("pre",null,[i("code",{class:"language-ts"},"Node[]\n")],-1),se=c("events"),ue=c("fold"),ce=i("p",null,"折叠节点时触发.",-1),ge=i("pre",null,[i("code",{class:"language-ts"},"(node: Node)\n")],-1),pe=c("unfold"),fe=i("p",null,"打开节点时触发.",-1),he=i("pre",null,[i("code",{class:"language-ts"},"(node: Node)\n")],-1),me=c("load-children"),ve=i("p",null,"针对子节点延迟加载. 加载子节点时触发.",-1),be=i("pre",null,[i("code",{class:"language-ts"},"(node: Node)\n")],-1),_e=c("load-children-success"),ye=i("p",null,"针对子节点延迟加载. 加载子节点成功时触发.",-1),Ne=i("pre",null,[i("code",{class:"language-ts"},"(node: Node)\n")],-1),Se=c("load-children-error"),De=i("p",null,[c("针对子节点延迟加载. 加载子节点失败时触发. 通过"),i("code",null,"node.$childrenLoadStaus.error"),c("获取错误信息.")],-1),Pe=i("pre",null,[i("code",{class:"language-ts"},"(node: Node)\n")],-1),Ee=c("methods"),Te=c("countChildren"),Me=i("pre",null,[i("code",{class:"language-ts"},"(node: Node | undefined): number\n")],-1),Be=c("addNode"),ke=i("pre",null,[i("code",{class:"language-ts"},"(node: obj, parentId: number | string | null, index?: number): void;\n")],-1),xe=c("moveNode"),Le=i("pre",null,[i("code",{class:"language-ts"},"(node: Node, parentId: number | string | null, index?: number): void;\n")],-1),Ce=c("removeNode"),Fe=i("pre",null,[i("code",{class:"language-ts"},"(node: Node): void;\n")],-1),He=c("outputNestedData"),$e=i("pre",null,[i("code",{class:"language-ts"},"(parent: Node | null, ignoreKeys?: string[], _returnFlat?: boolean | undefined): obj[];\n")],-1),Ie=c("outputFlatData"),we=i("pre",null,[i("code",{class:"language-ts"},"(parent: Node | null, ignoreKeys?: string[]): Record<string, unknown>[];\n")],-1),ze=c("isNodeParentFolded"),Ae=i("pre",null,[i("code",{class:"language-ts"},"(node: Node): boolean;\n")],-1),je=c("isNodeVisible"),Ke=i("pre",null,[i("code",{class:"language-ts"},"(node: Node): boolean;\n")],-1),Oe=c("foldAll"),Re=i("pre",null,[i("code",{class:"language-ts"},"(): void;\n")],-1),Xe=c("unfoldAll"),Ye=i("pre",null,[i("code",{class:"language-ts"},"(node?: Node | undefined): Promise<void> | undefined;\n")],-1),Ve=c("unfold"),We=i("pre",null,[i("code",{class:"language-ts"},"(node: Node): void | Promise<void>;\n")],-1),Ue=c("toggleFold"),qe=i("pre",null,[i("code",{class:"language-ts"},"(node: Node): void | Promise<void>;\n")],-1),Ge=c("updateChecked"),Je=i("pre",null,[i("code",{class:"language-ts"},"(node: Node): void;\n")],-1),Qe=c("getAllCheckedNodes"),Ze=i("pre",null,[i("code",{class:"language-ts"},"(): Node[];\n")],-1),el=c("Draggable"),ll=i("p",null,"拖拽树组件. 继承于 BaseTree.",-1),nl=c("props"),dl=c("triggerClass"),al=i("pre",null,[i("code",{class:"language-ts"},'{ type: String, default: "tree-node" }\n')],-1),ol=c("triggerBySelf"),rl=i("pre",null,[i("code",{class:"language-ts"},"Boolean\n")],-1),tl=c("draggable"),il=i("pre",null,[i("code",{class:"language-ts"},"{ type: Boolean, default: true }\n")],-1),sl=c("droppable"),ul=i("pre",null,[i("code",{class:"language-ts"},"{ type: Boolean, default: true }\n")],-1),cl=c("eachDraggable"),gl=i("pre",null,[i("code",{class:"language-ts"},"{\n  type: [Boolean, Function]\n}\n")],-1),pl=c("方法类型是 "),fl=c("eachDraggableFunc"),hl=c("eachDroppable"),ml=i("pre",null,[i("code",{class:"language-ts"},"{\n  type: [Boolean, Function]\n}\n")],-1),vl=c("方法类型是 "),bl=c("eachDraggableFunc"),_l=c("rootDraggable"),yl=i("pre",null,[i("code",{class:"language-ts"},"{ type: Boolean, default: true }\n")],-1),Nl=c("rootDroppable"),Sl=i("pre",null,[i("code",{class:"language-ts"},"{ type: Boolean, default: true }\n")],-1),Dl=c("ondragstart"),Pl=i("pre",null,[i("code",{class:"language-ts"},"{\n  type: Function as PropType<(store: Store3) => boolean>\n}\n")],-1),El=i("p",null,[i("strong",null,[i("code",null,"ondragend"),c(" 支持 promise, 但 "),i("code",null,"ondragstart"),c(" 不支持.")])],-1),Tl=c("ondragend"),Ml=i("pre",null,[i("code",{class:"language-ts"},"{\n  type: Function as PropType<(store: Store3) => boolean>\n}\n")],-1),Bl=i("p",null,[i("strong",null,[i("code",null,"ondragend"),c(" 支持 promise, 但 "),i("code",null,"ondragstart"),c(" 不支持.")])],-1),kl=c("afterPlaceholderCreated"),xl=i("pre",null,[i("code",{class:"language-ts"},"(placeholder: HTMLElement, store: Store3) => void\n")],-1),Ll=c("placeholderMaxHeight"),Cl=i("pre",null,[i("code",{class:"language-ts"},"{ type: Number, default: 100 }\n")],-1),Fl=c("unfoldWhenDragover"),Hl=i("pre",null,[i("code",{class:"language-ts"},"{ type: Boolean, default: true }\n")],-1),$l=c("unfoldWhenDragoverDelay"),Il=i("pre",null,[i("code",{class:"language-ts"},"{ type: Number, default: 80 }\n")],-1),wl=c("isNodeUnfoldable"),zl=i("pre",null,[i("code",{class:"language-ts"},"{\ntype: Function as PropType<(store: Store3) => boolean>,\n}\n")],-1),Al=c("draggingNodePositionMode"),jl=i("pre",null,[i("code",{class:"language-ts"},'{\ntype: String as PropType<PositionMode>,\ndefault: "top_left_corner",\n}\n')],-1),Kl=c("preventTextSelection"),Ol=i("pre",null,[i("code",{class:"language-ts"},"{ type: Boolean, default: true }\n")],-1),Rl=c("edgeScroll"),Xl=i("pre",null,[i("code",{class:"language-ts"},"{\n  type: Boolean\n}\n")],-1),Yl=c("edgeScrollTriggerMargin"),Vl=i("pre",null,[i("code",{class:"language-ts"},"{ type: Number, default: 50 }\n")],-1),Wl=c("edgeScrollSpeed"),Ul=i("pre",null,[i("code",{class:"language-ts"},"{ type: Number, default: 0.35 }\n")],-1),ql=c("edgeScrollTriggerMode"),Gl=i("pre",null,[i("code",{class:"language-ts"},'{\ntype: String as PropType<PositionMode>,\ndefault: "top_left_corner",\n}\n')],-1),Jl=c("edgeScrollSpecifiedContainerX"),Ql=i("pre",null,[i("code",{class:"language-ts"},"HTMLElement | ((store: Store3) => HTMLElement)\n")],-1),Zl=c("edgeScrollSpecifiedContainerY"),en=i("pre",null,[i("code",{class:"language-ts"},"HTMLElement | ((store: Store3) => HTMLElement)\n")],-1),ln=c("data"),nn=c("draggingNode"),dn=i("pre",null,[i("code",{class:"language-ts"},"Node | null\n")],-1),an=c("store"),on=i("p",null,"拖拽过程中的相关数据.",-1),rn=i("pre",null,[i("code",{class:"language-ts"},"Store3 | null\n")],-1),tn=c("events"),sn=c("drag"),un=i("p",null,"拖拽开始时触发.",-1),cn=i("pre",null,[i("code",{class:"language-ts"},"(store: Store3)\n")],-1),gn=c("before-first-move"),pn=i("p",null,[c("与"),i("code",null,"drag"),c("相同并同时触发.")],-1),fn=i("pre",null,[i("code",{class:"language-ts"},"(store: Store3)\n")],-1),hn=c("drop"),mn=i("p",null,"拖拽结束时触发. 触发到拖拽开始树.",-1),vn=i("pre",null,[i("code",{class:"language-ts"},"(store: Store3)\n")],-1),bn=c("drop-into"),_n=i("p",null,"拖拽结束时触发. 触发到拖拽目标树(如果拖拽开始的树和结束的不是同一颗树, 即跨树).",-1),yn=i("pre",null,[i("code",{class:"language-ts"},"(store: Store3)\n")],-1),Nn=c("drop-change"),Sn=i("p",null,"拖拽结束时触发. 同时触发到拖拽开始和目标树.",-1),Dn=i("pre",null,[i("code",{class:"language-ts"},"(store: Store3)\n")],-1),Pn=c("methods"),En=c("isParentDragging"),Tn=i("pre",null,[i("code",{class:"language-ts"},"(node: Node): boolean;\n")],-1),Mn=c("Other"),Bn=c("Draggable"),kn=i("p",null,"Draggable 组件的 Vue 实例(vm).",-1),xn=c("eachDraggableFunc"),Ln=i("pre",null,[i("code",{class:"language-ts"},";(node: Node | undefined, store: Store3, options: Options2, vm: Draggable) =>\n  boolean | undefined\n")],-1),Cn=c("PositionMode"),Fn=i("pre",null,[i("code",{class:"language-ts"},"'top_left_corner' | 'mouse'\n")],-1),Hn=c("Store3"),$n=i("p",null,"拖拽过程中的相关数据.",-1),In=i("pre",null,[i("code",{class:"language-ts"},'interface {\n  // Store\n  movedCount: number;\n  listenerElement: HTMLElement;\n  directTriggerElement: HTMLElement;\n  triggerElement: HTMLElement;\n  startEvent: MouseOrTouchEvent;\n  moveEvent: MouseOrTouchEvent;\n  endEvent: MouseOrTouchEvent;\n  mouse: EventPosition;\n  initialMouse: EventPosition;\n  move: EventPosition2;\n  movedOrClonedElement: HTMLElement;\n  movedElement: HTMLElement;\n  initialPosition: EventPosition2;\n  initialPositionRelativeToViewport: EventPosition2;\n  updateMovedElementStyle: () => void;\n  _isMovingElementCloned: boolean;\n  // Store2\n  startTreeEl: HTMLElement;\n  targetTreeEl: HTMLElement;\n  placeholder: HTMLElement;\n  // Store3\n  startTree: Draggable;\n  targetTree: Draggable;\n  draggingNode: Node;\n  startPath: {\n      tree: Draggable;\n      parent?: Node;\n      index: number;\n  };\n  targetPath: Store3["startPath"]; // same to startPath\n  placeholderLevel: number;\n  placeholderPrevNode?: Node;\n  placeholderPrevNodeInTree?: Node;\n  dragChanged?: boolean;\n  isCloned?: boolean;\n}\n')],-1),wn=c("EventPosition"),zn=i("pre",null,[i("code",{class:"language-ts"},"{\n  x: number, y: number,\n  pageX: number,\n  pageY: number,\n  clientX: number,\n  clientY: number,\n  screenX: number,\n  screenY: number\n}\n")],-1),An=c("EventPosition2"),jn=i("pre",null,[i("code",{class:"language-ts"},"{\n  x: number\n  y: number\n}\n")],-1),Kn=c("obj"),On=i("pre",null,[i("code",{class:"language-ts"},"{\n  string: unknown\n}\n")],-1),Rn=c("BaseNode"),Xn=i("pre",null,[i("code",{class:"language-ts"},"{\n    $id: string | number;\n    $pid?: string | number;\n    $level: number;\n    $hidden?: boolean;\n    $folded?: boolean;\n    $checked?: boolean | 0;\n    $children: Node[];\n    $childrenLoading?: boolean;\n    $childrenLoadStaus?: {\n      status: 'success'|'error',\n      error: Error\n    };\n    $draggable?: boolean;\n    $droppable?: boolean;\n    $nodeStyle?: string | Record<string, string> | unknown;\n    $nodeClass?: string | unknown;\n    $outerStyle?: string | Record<string, string> | unknown;\n    $outerClass?: string | unknown;\n}\n")],-1),Yn=c("Node"),Vn=i("pre",null,[i("code",{class:"language-ts"},"obj & BaseNode\n")],-1);g.render=function(e,l,n,d,a,c){const g=o("vheading"),Wn=o("Anchor");return r(),t("div",p,[i("div",f,[s(g,{level:1,id:"api"},{default:u((()=>[h])),_:1}),s(g,{level:2,id:"basetree"},{default:u((()=>[m])),_:1}),s(g,{level:3,id:"props"},{default:u((()=>[v])),_:1}),s(g,{level:4,id:"idkey"},{default:u((()=>[b])),_:1}),_,s(g,{level:4,id:"parentidkey"},{default:u((()=>[y])),_:1}),N,s(g,{level:4,id:"childrenkey"},{default:u((()=>[S])),_:1}),D,s(g,{level:4,id:"textkey"},{default:u((()=>[P])),_:1}),E,s(g,{level:4,id:"flatdata"},{default:u((()=>[T])),_:1}),M,s(g,{level:4,id:"treedata"},{default:u((()=>[B])),_:1}),k,s(g,{level:4,id:"indent"},{default:u((()=>[x])),_:1}),L,s(g,{level:4,id:"gap"},{default:u((()=>[C])),_:1}),F,s(g,{level:4,id:"rtl"},{default:u((()=>[H])),_:1}),$,s(g,{level:4,id:"virtualization"},{default:u((()=>[I])),_:1}),w,s(g,{level:4,id:"virtualizationprerender"},{default:u((()=>[z])),_:1}),A,s(g,{level:4,id:"childrenlazyloading"},{default:u((()=>[j])),_:1}),K,s(g,{level:4,id:"childrenloader"},{default:u((()=>[O])),_:1}),R,s(g,{level:4,id:"defaultfolded"},{default:u((()=>[X])),_:1}),Y,s(g,{level:3,id:"data"},{default:u((()=>[V])),_:1}),s(g,{level:4,id:"nodes"},{default:u((()=>[W])),_:1}),U,s(g,{level:4,id:"nodesbyid"},{default:u((()=>[q])),_:1}),G,s(g,{level:4,id:"trees"},{default:u((()=>[J])),_:1}),Q,s(g,{level:4,id:"dragging"},{default:u((()=>[Z])),_:1}),ee,s(g,{level:4,id:"treeid"},{default:u((()=>[le])),_:1}),ne,s(g,{level:4,id:"tree"},{default:u((()=>[de])),_:1}),ae,oe,s(g,{level:3,id:"computed"},{default:u((()=>[re])),_:1}),s(g,{level:4,id:"visiblenodes"},{default:u((()=>[te])),_:1}),ie,s(g,{level:3,id:"events"},{default:u((()=>[se])),_:1}),s(g,{level:4,id:"fold"},{default:u((()=>[ue])),_:1}),ce,ge,s(g,{level:4,id:"unfold"},{default:u((()=>[pe])),_:1}),fe,he,s(g,{level:4,id:"load-children"},{default:u((()=>[me])),_:1}),ve,be,s(g,{level:4,id:"load-children-success"},{default:u((()=>[_e])),_:1}),ye,Ne,s(g,{level:4,id:"load-children-error"},{default:u((()=>[Se])),_:1}),De,Pe,s(g,{level:3,id:"methods"},{default:u((()=>[Ee])),_:1}),s(g,{level:4,id:"countchildren"},{default:u((()=>[Te])),_:1}),Me,s(g,{level:4,id:"addnode"},{default:u((()=>[Be])),_:1}),ke,s(g,{level:4,id:"movenode"},{default:u((()=>[xe])),_:1}),Le,s(g,{level:4,id:"removenode"},{default:u((()=>[Ce])),_:1}),Fe,s(g,{level:4,id:"outputnesteddata"},{default:u((()=>[He])),_:1}),$e,s(g,{level:4,id:"outputflatdata"},{default:u((()=>[Ie])),_:1}),we,s(g,{level:4,id:"isnodeparentfolded"},{default:u((()=>[ze])),_:1}),Ae,s(g,{level:4,id:"isnodevisible"},{default:u((()=>[je])),_:1}),Ke,s(g,{level:4,id:"foldall"},{default:u((()=>[Oe])),_:1}),Re,s(g,{level:4,id:"unfoldall"},{default:u((()=>[Xe])),_:1}),Ye,s(g,{level:4,id:"unfold-1"},{default:u((()=>[Ve])),_:1}),We,s(g,{level:4,id:"togglefold"},{default:u((()=>[Ue])),_:1}),qe,s(g,{level:4,id:"updatechecked"},{default:u((()=>[Ge])),_:1}),Je,s(g,{level:4,id:"getallcheckednodes"},{default:u((()=>[Qe])),_:1}),Ze,s(g,{level:2,id:"draggable"},{default:u((()=>[el])),_:1}),ll,s(g,{level:3,id:"props-1"},{default:u((()=>[nl])),_:1}),s(g,{level:4,id:"triggerclass"},{default:u((()=>[dl])),_:1}),al,s(g,{level:4,id:"triggerbyself"},{default:u((()=>[ol])),_:1}),rl,s(g,{level:4,id:"draggable-1"},{default:u((()=>[tl])),_:1}),il,s(g,{level:4,id:"droppable"},{default:u((()=>[sl])),_:1}),ul,s(g,{level:4,id:"eachdraggable"},{default:u((()=>[cl])),_:1}),gl,i("p",null,[pl,s(Wn,{to:e.resolveHref("#eachDraggableFunc")},{default:u((()=>[fl])),_:1},8,["to"])]),s(g,{level:4,id:"eachdroppable"},{default:u((()=>[hl])),_:1}),ml,i("p",null,[vl,s(Wn,{to:e.resolveHref("#eachDraggableFunc")},{default:u((()=>[bl])),_:1},8,["to"])]),s(g,{level:4,id:"rootdraggable"},{default:u((()=>[_l])),_:1}),yl,s(g,{level:4,id:"rootdroppable"},{default:u((()=>[Nl])),_:1}),Sl,s(g,{level:4,id:"ondragstart"},{default:u((()=>[Dl])),_:1}),Pl,El,s(g,{level:4,id:"ondragend"},{default:u((()=>[Tl])),_:1}),Ml,Bl,s(g,{level:4,id:"afterplaceholdercreated"},{default:u((()=>[kl])),_:1}),xl,s(g,{level:4,id:"placeholdermaxheight"},{default:u((()=>[Ll])),_:1}),Cl,s(g,{level:4,id:"unfoldwhendragover"},{default:u((()=>[Fl])),_:1}),Hl,s(g,{level:4,id:"unfoldwhendragoverdelay"},{default:u((()=>[$l])),_:1}),Il,s(g,{level:4,id:"isnodeunfoldable"},{default:u((()=>[wl])),_:1}),zl,s(g,{level:4,id:"draggingnodepositionmode"},{default:u((()=>[Al])),_:1}),jl,s(g,{level:4,id:"preventtextselection"},{default:u((()=>[Kl])),_:1}),Ol,s(g,{level:4,id:"edgescroll"},{default:u((()=>[Rl])),_:1}),Xl,s(g,{level:4,id:"edgescrolltriggermargin"},{default:u((()=>[Yl])),_:1}),Vl,s(g,{level:4,id:"edgescrollspeed"},{default:u((()=>[Wl])),_:1}),Ul,s(g,{level:4,id:"edgescrolltriggermode"},{default:u((()=>[ql])),_:1}),Gl,s(g,{level:4,id:"edgescrollspecifiedcontainerx"},{default:u((()=>[Jl])),_:1}),Ql,s(g,{level:4,id:"edgescrollspecifiedcontainery"},{default:u((()=>[Zl])),_:1}),en,s(g,{level:3,id:"data-1"},{default:u((()=>[ln])),_:1}),s(g,{level:4,id:"draggingnode"},{default:u((()=>[nn])),_:1}),dn,s(g,{level:4,id:"store"},{default:u((()=>[an])),_:1}),on,rn,s(g,{level:3,id:"events-1"},{default:u((()=>[tn])),_:1}),s(g,{level:4,id:"drag"},{default:u((()=>[sn])),_:1}),un,cn,s(g,{level:4,id:"before-first-move"},{default:u((()=>[gn])),_:1}),pn,fn,s(g,{level:4,id:"drop"},{default:u((()=>[hn])),_:1}),mn,vn,s(g,{level:4,id:"drop-into"},{default:u((()=>[bn])),_:1}),_n,yn,s(g,{level:4,id:"drop-change"},{default:u((()=>[Nn])),_:1}),Sn,Dn,s(g,{level:3,id:"methods-1"},{default:u((()=>[Pn])),_:1}),s(g,{level:4,id:"isparentdragging"},{default:u((()=>[En])),_:1}),Tn,s(g,{level:2,id:"other"},{default:u((()=>[Mn])),_:1}),s(g,{level:3,id:"draggable-2"},{default:u((()=>[Bn])),_:1}),kn,s(g,{level:3,id:"eachdraggablefunc"},{default:u((()=>[xn])),_:1}),Ln,s(g,{level:3,id:"positionmode"},{default:u((()=>[Cn])),_:1}),Fn,s(g,{level:3,id:"store3"},{default:u((()=>[Hn])),_:1}),$n,In,s(g,{level:3,id:"eventposition"},{default:u((()=>[wn])),_:1}),zn,s(g,{level:3,id:"eventposition2"},{default:u((()=>[An])),_:1}),jn,s(g,{level:3,id:"obj"},{default:u((()=>[Kn])),_:1}),On,s(g,{level:3,id:"basenode"},{default:u((()=>[Rn])),_:1}),Xn,s(g,{level:3,id:"node"},{default:u((()=>[Yn])),_:1}),Vn])])};export{g as default};

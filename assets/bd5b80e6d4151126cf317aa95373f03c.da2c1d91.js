import{u as e,d as l}from"./index.2b004346.js";import{_ as n}from"./DocTemplateBase.3230dea8.js";import{h as d,I as a,k as o,v as r,n as t,t as i,p as s,w as u,z as c}from"./vendor.92220208.js";const g={extends:n,setup(){const n=a(),o=[{name:"BaseTree",id:"basetree",children:[{name:"props",id:"props",children:[{name:"idKey",id:"idkey",children:[]},{name:"parentIdKey",id:"parentidkey",children:[]},{name:"childrenKey",id:"childrenkey",children:[]},{name:"textKey",id:"textkey",children:[]},{name:"flatData",id:"flatdata",children:[]},{name:"treeData",id:"treedata",children:[]},{name:"indent",id:"indent",children:[]},{name:"gap",id:"gap",children:[]},{name:"rtl",id:"rtl",children:[]},{name:"virtualization",id:"virtualization",children:[]},{name:"virtualizationPrerender",id:"virtualizationprerender",children:[]},{name:"childrenLazyLoading",id:"childrenlazyloading",children:[]},{name:"childrenLoader",id:"childrenloader",children:[]},{name:"defaultFolded",id:"defaultfolded",children:[]}]},{name:"data",id:"data",children:[{name:"nodes",id:"nodes",children:[]},{name:"nodesByID",id:"nodesbyid",children:[]},{name:"trees",id:"trees",children:[]},{name:"dragging",id:"dragging",children:[]},{name:"treeID",id:"treeid",children:[]},{name:"tree",id:"tree",children:[]}]},{name:"computed",id:"computed",children:[{name:"visibleNodes",id:"visiblenodes",children:[]}]},{name:"events",id:"events",children:[{name:"fold",id:"fold",children:[]},{name:"unfold",id:"unfold",children:[]},{name:"load-children",id:"load-children",children:[]},{name:"load-children-success",id:"load-children-success",children:[]},{name:"load-children-error",id:"load-children-error",children:[]}]},{name:"methods",id:"methods",children:[{name:"countChildren",id:"countchildren",children:[]},{name:"addNode",id:"addnode",children:[]},{name:"moveNode",id:"movenode",children:[]},{name:"removeNode",id:"removenode",children:[]},{name:"outputNestedData",id:"outputnesteddata",children:[]},{name:"outputFlatData",id:"outputflatdata",children:[]},{name:"isNodeParentFolded",id:"isnodeparentfolded",children:[]},{name:"isNodeVisible",id:"isnodevisible",children:[]},{name:"foldAll",id:"foldall",children:[]},{name:"unfoldAll",id:"unfoldall",children:[]},{name:"unfold",id:"unfold-1",children:[]},{name:"toggleFold",id:"togglefold",children:[]},{name:"updateChecked",id:"updatechecked",children:[]},{name:"getAllCheckedNodes",id:"getallcheckednodes",children:[]}]}]},{name:"Draggable",id:"draggable",children:[{name:"props",id:"props-1",children:[{name:"triggerClass",id:"triggerclass",children:[]},{name:"triggerBySelf",id:"triggerbyself",children:[]},{name:"draggable",id:"draggable-1",children:[]},{name:"droppable",id:"droppable",children:[]},{name:"eachDraggable",id:"eachdraggable",children:[]},{name:"eachDroppable",id:"eachdroppable",children:[]},{name:"rootDraggable",id:"rootdraggable",children:[]},{name:"rootDroppable",id:"rootdroppable",children:[]},{name:"ondragstart",id:"ondragstart",children:[]},{name:"ondragend",id:"ondragend",children:[]},{name:"afterPlaceholderCreated",id:"afterplaceholdercreated",children:[]},{name:"placeholderMaxHeight",id:"placeholdermaxheight",children:[]},{name:"unfoldWhenDragover",id:"unfoldwhendragover",children:[]},{name:"unfoldWhenDragoverDelay",id:"unfoldwhendragoverdelay",children:[]},{name:"isNodeUnfoldable",id:"isnodeunfoldable",children:[]},{name:"draggingNodePositionMode",id:"draggingnodepositionmode",children:[]},{name:"preventTextSelection",id:"preventtextselection",children:[]},{name:"edgeScroll",id:"edgescroll",children:[]},{name:"edgeScrollTriggerMargin",id:"edgescrolltriggermargin",children:[]},{name:"edgeScrollSpeed",id:"edgescrollspeed",children:[]},{name:"edgeScrollTriggerMode",id:"edgescrolltriggermode",children:[]},{name:"edgeScrollSpecifiedContainerX",id:"edgescrollspecifiedcontainerx",children:[]},{name:"edgeScrollSpecifiedContainerY",id:"edgescrollspecifiedcontainery",children:[]}]},{name:"data",id:"data-1",children:[{name:"draggingNode",id:"draggingnode",children:[]},{name:"store",id:"store",children:[]}]},{name:"events",id:"events-1",children:[{name:"drag",id:"drag",children:[]},{name:"before-first-move",id:"before-first-move",children:[]},{name:"drop",id:"drop",children:[]},{name:"drop-into",id:"drop-into",children:[]},{name:"drop-change",id:"drop-change",children:[]}]},{name:"methods",id:"methods-1",children:[{name:"isParentDragging",id:"isparentdragging",children:[]}]}]},{name:"Other",id:"other",children:[{name:"Draggable",id:"draggable-2",children:[]},{name:"eachDraggableFunc",id:"eachdraggablefunc",children:[]},{name:"PositionMode",id:"positionmode",children:[]},{name:"Store3",id:"store3",children:[]},{name:"EventPosition",id:"eventposition",children:[]},{name:"EventPosition2",id:"eventposition2",children:[]},{name:"obj",id:"obj",children:[]},{name:"BaseNode",id:"basenode",children:[]},{name:"Node",id:"node",children:[]}]}];e("API",n),l.value=o,d((()=>{l.value=null}))}},p={class:"docs-view"},h={class:"article mt-14 mb-8 prose"},f=c("API"),m=c("BaseTree"),v=c("props"),b=c("idKey"),_=i("pre",null,[i("code",{class:"language-ts"},'{ type: String, default: "id" }\n')],-1),y=c("parentIdKey"),N=i("pre",null,[i("code",{class:"language-ts"},'{ type: String, default: "parent_id" }\n')],-1),S=c("childrenKey"),D=i("pre",null,[i("code",{class:"language-ts"},'{ type: String, default: "children" }\n')],-1),E=c("textKey"),P=i("pre",null,[i("code",{class:"language-ts"},'{ type: String, default: "text" }\n')],-1),T=c("flatData"),M=i("pre",null,[i("code",{class:"language-ts"},"{\n  type: Array\n}\n")],-1),B=c("treeData"),F=i("pre",null,[i("code",{class:"language-ts"},"{\n  type: Array\n}\n")],-1),k=c("indent"),x=i("pre",null,[i("code",{class:"language-ts"},"{ type: Number, default: 20 }\n")],-1),L=c("gap"),C=i("pre",null,[i("code",{class:"language-ts"},"{\n  type: Number\n}\n")],-1),w=c("rtl"),H=i("pre",null,[i("code",{class:"language-ts"},"{ type: Boolean, default: false }\n")],-1),z=c("virtualization"),$=i("pre",null,[i("code",{class:"language-ts"},"{ type: Boolean, default: false }\n")],-1),I=c("virtualizationPrerender"),A=i("pre",null,[i("code",{class:"language-ts"},"{ type: Number, default: 20 }\n")],-1),j=c("childrenLazyLoading"),K=i("pre",null,[i("code",{class:"language-ts"},"{ type: Boolean, default: false }\n")],-1),O=c("childrenLoader"),R=i("pre",null,[i("code",{class:"language-ts"},"(\n  node: Node,\n  vm: ComponentPublicInstance\n) => Promise<Node[]>;\n")],-1),X=c("defaultFolded"),Y=i("pre",null,[i("code",{class:"language-ts"},"{ type: Boolean, default: false }\n")],-1),V=c("data"),W=c("nodes"),U=i("pre",null,[i("code",{class:"language-ts"},"Node[]\n")],-1),G=c("nodesByID"),q=i("pre",null,[i("code",{class:"language-ts"},"Record<string, Node>\n")],-1),J=c("trees"),Q=i("pre",null,[i("code",{class:"language-ts"},"{[treeID:string]: Node}\n")],-1),Z=c("dragging"),ee=i("pre",null,[i("code",{class:"language-ts"},"boolean\n")],-1),le=c("treeID"),ne=i("pre",null,[i("code",{class:"language-ts"},"string\n")],-1),de=c("tree"),ae=i("p",null,"vm of tree",-1),oe=i("pre",null,[i("code",{class:"language-ts"},"this\n")],-1),re=c("computed"),te=c("visibleNodes"),ie=i("pre",null,[i("code",{class:"language-ts"},"Node[]\n")],-1),se=c("events"),ue=c("fold"),ce=i("pre",null,[i("code",{class:"language-ts"},"(node: Node)\n")],-1),ge=c("unfold"),pe=i("pre",null,[i("code",{class:"language-ts"},"(node: Node)\n")],-1),he=c("load-children"),fe=i("p",null,"For children lazy load. Start to load children",-1),me=i("pre",null,[i("code",{class:"language-ts"},"(node: Node)\n")],-1),ve=c("load-children-success"),be=i("p",null,"For children lazy load",-1),_e=i("pre",null,[i("code",{class:"language-ts"},"(node: Node)\n")],-1),ye=c("load-children-error"),Ne=i("p",null,[c("For children lazy load. Get error by "),i("code",null,"node.$childrenLoadStaus.error"),c(".")],-1),Se=i("pre",null,[i("code",{class:"language-ts"},"(node: Node)\n")],-1),De=c("methods"),Ee=c("countChildren"),Pe=i("pre",null,[i("code",{class:"language-ts"},"(node: Node | undefined): number\n")],-1),Te=c("addNode"),Me=i("pre",null,[i("code",{class:"language-ts"},"(node: obj, parentId: number | string | null, index?: number): void;\n")],-1),Be=c("moveNode"),Fe=i("pre",null,[i("code",{class:"language-ts"},"(node: Node, parentId: number | string | null, index?: number): void;\n")],-1),ke=c("removeNode"),xe=i("pre",null,[i("code",{class:"language-ts"},"(node: Node): void;\n")],-1),Le=c("outputNestedData"),Ce=i("pre",null,[i("code",{class:"language-ts"},"(parent: Node | null, ignoreKeys?: string[], _returnFlat?: boolean | undefined): obj[];\n")],-1),we=c("outputFlatData"),He=i("pre",null,[i("code",{class:"language-ts"},"(parent: Node | null, ignoreKeys?: string[]): Record<string, unknown>[];\n")],-1),ze=c("isNodeParentFolded"),$e=i("pre",null,[i("code",{class:"language-ts"},"(node: Node): boolean;\n")],-1),Ie=c("isNodeVisible"),Ae=i("pre",null,[i("code",{class:"language-ts"},"(node: Node): boolean;\n")],-1),je=c("foldAll"),Ke=i("pre",null,[i("code",{class:"language-ts"},"(): void;\n")],-1),Oe=c("unfoldAll"),Re=i("pre",null,[i("code",{class:"language-ts"},"(node?: Node | undefined): Promise<void> | undefined;\n")],-1),Xe=c("unfold"),Ye=i("pre",null,[i("code",{class:"language-ts"},"(node: Node): void | Promise<void>;\n")],-1),Ve=c("toggleFold"),We=i("pre",null,[i("code",{class:"language-ts"},"(node: Node): void | Promise<void>;\n")],-1),Ue=c("updateChecked"),Ge=i("pre",null,[i("code",{class:"language-ts"},"(node: Node): void;\n")],-1),qe=c("getAllCheckedNodes"),Je=i("pre",null,[i("code",{class:"language-ts"},"(): Node[];\n")],-1),Qe=c("Draggable"),Ze=i("p",null,"The draggable tree component. It extends BaseTree.",-1),el=c("props"),ll=c("triggerClass"),nl=i("pre",null,[i("code",{class:"language-ts"},'{ type: String, default: "tree-node" }\n')],-1),dl=c("triggerBySelf"),al=i("pre",null,[i("code",{class:"language-ts"},"Boolean\n")],-1),ol=c("draggable"),rl=i("pre",null,[i("code",{class:"language-ts"},"{ type: Boolean, default: true }\n")],-1),tl=c("droppable"),il=i("pre",null,[i("code",{class:"language-ts"},"{ type: Boolean, default: true }\n")],-1),sl=c("eachDraggable"),ul=i("pre",null,[i("code",{class:"language-ts"},"{\n  type: [Boolean, Function]\n}\n")],-1),cl=c("Function type is "),gl=c("eachDraggableFunc"),pl=c("eachDroppable"),hl=i("pre",null,[i("code",{class:"language-ts"},"{\n  type: [Boolean, Function]\n}\n")],-1),fl=c("Function type is "),ml=c("eachDraggableFunc"),vl=c("rootDraggable"),bl=i("pre",null,[i("code",{class:"language-ts"},"{ type: Boolean, default: true }\n")],-1),_l=c("rootDroppable"),yl=i("pre",null,[i("code",{class:"language-ts"},"{ type: Boolean, default: true }\n")],-1),Nl=c("ondragstart"),Sl=i("pre",null,[i("code",{class:"language-ts"},"{\n  type: Function as PropType<(store: Store3) => boolean>\n}\n")],-1),Dl=i("p",null,[i("strong",null,[i("code",null,"ondragend"),c(" supports promise, but "),i("code",null,"ondragstart"),c(" does not.")])],-1),El=c("ondragend"),Pl=i("pre",null,[i("code",{class:"language-ts"},"{\n  type: Function as PropType<(store: Store3) => boolean>\n}\n")],-1),Tl=i("p",null,[i("strong",null,[i("code",null,"ondragend"),c(" supports promise, but "),i("code",null,"ondragstart"),c(" does not.")])],-1),Ml=c("afterPlaceholderCreated"),Bl=i("pre",null,[i("code",{class:"language-ts"},"(placeholder: HTMLElement, store: Store3) => void\n")],-1),Fl=c("placeholderMaxHeight"),kl=i("pre",null,[i("code",{class:"language-ts"},"{ type: Number, default: 100 }\n")],-1),xl=c("unfoldWhenDragover"),Ll=i("pre",null,[i("code",{class:"language-ts"},"{ type: Boolean, default: true }\n")],-1),Cl=c("unfoldWhenDragoverDelay"),wl=i("pre",null,[i("code",{class:"language-ts"},"{ type: Number, default: 80 }\n")],-1),Hl=c("isNodeUnfoldable"),zl=i("pre",null,[i("code",{class:"language-ts"},"{\ntype: Function as PropType<(store: Store3) => boolean>,\n}\n")],-1),$l=c("draggingNodePositionMode"),Il=i("pre",null,[i("code",{class:"language-ts"},'{\ntype: String as PropType<PositionMode>,\ndefault: "top_left_corner",\n}\n')],-1),Al=c("preventTextSelection"),jl=i("pre",null,[i("code",{class:"language-ts"},"{ type: Boolean, default: true }\n")],-1),Kl=c("edgeScroll"),Ol=i("pre",null,[i("code",{class:"language-ts"},"{\n  type: Boolean\n}\n")],-1),Rl=c("edgeScrollTriggerMargin"),Xl=i("pre",null,[i("code",{class:"language-ts"},"{ type: Number, default: 50 }\n")],-1),Yl=c("edgeScrollSpeed"),Vl=i("pre",null,[i("code",{class:"language-ts"},"{ type: Number, default: 0.35 }\n")],-1),Wl=c("edgeScrollTriggerMode"),Ul=i("pre",null,[i("code",{class:"language-ts"},'{\ntype: String as PropType<PositionMode>,\ndefault: "top_left_corner",\n}\n')],-1),Gl=c("edgeScrollSpecifiedContainerX"),ql=i("pre",null,[i("code",{class:"language-ts"},"HTMLElement | ((store: Store3) => HTMLElement)\n")],-1),Jl=c("edgeScrollSpecifiedContainerY"),Ql=i("pre",null,[i("code",{class:"language-ts"},"HTMLElement | ((store: Store3) => HTMLElement)\n")],-1),Zl=c("data"),en=c("draggingNode"),ln=i("pre",null,[i("code",{class:"language-ts"},"Node | null\n")],-1),nn=c("store"),dn=i("p",null,"Runtime data of drag and drop.",-1),an=i("pre",null,[i("code",{class:"language-ts"},"Store3 | null\n")],-1),on=c("events"),rn=c("drag"),tn=i("p",null,"Emit when drag start.",-1),sn=i("pre",null,[i("code",{class:"language-ts"},"(store: Store3)\n")],-1),un=c("before-first-move"),cn=i("p",null,[c("Same with "),i("code",null,"drag")],-1),gn=i("pre",null,[i("code",{class:"language-ts"},"(store: Store3)\n")],-1),pn=c("drop"),hn=i("p",null,"Emit when drag end. Emit to drag start/source tree.",-1),fn=i("pre",null,[i("code",{class:"language-ts"},"(store: Store3)\n")],-1),mn=c("drop-into"),vn=i("p",null,"Emit when drag end. Emit to drag end/target tree.",-1),bn=i("pre",null,[i("code",{class:"language-ts"},"(store: Store3)\n")],-1),_n=c("drop-change"),yn=i("p",null,"Emit when the tree changed by drag. Emit to both drag start and end tree.",-1),Nn=i("pre",null,[i("code",{class:"language-ts"},"(store: Store3)\n")],-1),Sn=c("methods"),Dn=c("isParentDragging"),En=i("pre",null,[i("code",{class:"language-ts"},"(node: Node): boolean;\n")],-1),Pn=c("Other"),Tn=c("Draggable"),Mn=i("p",null,"The Vue instance(vm) of the Draggable component.",-1),Bn=c("eachDraggableFunc"),Fn=i("pre",null,[i("code",{class:"language-ts"},";(node: Node | undefined, store: Store3, options: Options2, vm: Draggable) =>\n  boolean | undefined\n")],-1),kn=c("PositionMode"),xn=i("pre",null,[i("code",{class:"language-ts"},"'top_left_corner' | 'mouse'\n")],-1),Ln=c("Store3"),Cn=i("p",null,"Runtime data of drag and drop.",-1),wn=i("pre",null,[i("code",{class:"language-ts"},'interface {\n  // Store\n  movedCount: number;\n  listenerElement: HTMLElement;\n  directTriggerElement: HTMLElement;\n  triggerElement: HTMLElement;\n  startEvent: MouseOrTouchEvent;\n  moveEvent: MouseOrTouchEvent;\n  endEvent: MouseOrTouchEvent;\n  mouse: EventPosition;\n  initialMouse: EventPosition;\n  move: EventPosition2;\n  movedOrClonedElement: HTMLElement;\n  movedElement: HTMLElement;\n  initialPosition: EventPosition2;\n  initialPositionRelativeToViewport: EventPosition2;\n  updateMovedElementStyle: () => void;\n  _isMovingElementCloned: boolean;\n  // Store2\n  startTreeEl: HTMLElement;\n  targetTreeEl: HTMLElement;\n  placeholder: HTMLElement;\n  // Store3\n  startTree: Draggable;\n  targetTree: Draggable;\n  draggingNode: Node;\n  startPath: {\n      tree: Draggable;\n      parent?: Node;\n      index: number;\n  };\n  targetPath: Store3["startPath"]; // same to startPath\n  placeholderLevel: number;\n  placeholderPrevNode?: Node;\n  placeholderPrevNodeInTree?: Node;\n  dragChanged?: boolean;\n  isCloned?: boolean;\n}\n')],-1),Hn=c("EventPosition"),zn=i("pre",null,[i("code",{class:"language-ts"},"{\n  x: number, y: number,\n  pageX: number,\n  pageY: number,\n  clientX: number,\n  clientY: number,\n  screenX: number,\n  screenY: number\n}\n")],-1),$n=c("EventPosition2"),In=i("pre",null,[i("code",{class:"language-ts"},"{\n  x: number\n  y: number\n}\n")],-1),An=c("obj"),jn=i("pre",null,[i("code",{class:"language-ts"},"{\n  string: unknown\n}\n")],-1),Kn=c("BaseNode"),On=i("pre",null,[i("code",{class:"language-ts"},"{\n    $id: string | number;\n    $pid?: string | number;\n    $level: number;\n    $hidden?: boolean;\n    $folded?: boolean;\n    $checked?: boolean | 0;\n    $children: Node[];\n    $childrenLoading?: boolean;\n    $childrenLoadStaus?: {\n      status: 'success'|'error',\n      error: Error\n    };\n    $draggable?: boolean;\n    $droppable?: boolean;\n    $nodeStyle?: string | Record<string, string> | unknown;\n    $nodeClass?: string | unknown;\n    $outerStyle?: string | Record<string, string> | unknown;\n    $outerClass?: string | unknown;\n}\n")],-1),Rn=c("Node"),Xn=i("pre",null,[i("code",{class:"language-ts"},"obj & BaseNode\n")],-1);g.render=function(e,l,n,d,a,c){const g=o("vheading"),Yn=o("Anchor");return r(),t("div",p,[i("div",h,[s(g,{level:1,id:"api"},{default:u((()=>[f])),_:1}),s(g,{level:2,id:"basetree"},{default:u((()=>[m])),_:1}),s(g,{level:3,id:"props"},{default:u((()=>[v])),_:1}),s(g,{level:4,id:"idkey"},{default:u((()=>[b])),_:1}),_,s(g,{level:4,id:"parentidkey"},{default:u((()=>[y])),_:1}),N,s(g,{level:4,id:"childrenkey"},{default:u((()=>[S])),_:1}),D,s(g,{level:4,id:"textkey"},{default:u((()=>[E])),_:1}),P,s(g,{level:4,id:"flatdata"},{default:u((()=>[T])),_:1}),M,s(g,{level:4,id:"treedata"},{default:u((()=>[B])),_:1}),F,s(g,{level:4,id:"indent"},{default:u((()=>[k])),_:1}),x,s(g,{level:4,id:"gap"},{default:u((()=>[L])),_:1}),C,s(g,{level:4,id:"rtl"},{default:u((()=>[w])),_:1}),H,s(g,{level:4,id:"virtualization"},{default:u((()=>[z])),_:1}),$,s(g,{level:4,id:"virtualizationprerender"},{default:u((()=>[I])),_:1}),A,s(g,{level:4,id:"childrenlazyloading"},{default:u((()=>[j])),_:1}),K,s(g,{level:4,id:"childrenloader"},{default:u((()=>[O])),_:1}),R,s(g,{level:4,id:"defaultfolded"},{default:u((()=>[X])),_:1}),Y,s(g,{level:3,id:"data"},{default:u((()=>[V])),_:1}),s(g,{level:4,id:"nodes"},{default:u((()=>[W])),_:1}),U,s(g,{level:4,id:"nodesbyid"},{default:u((()=>[G])),_:1}),q,s(g,{level:4,id:"trees"},{default:u((()=>[J])),_:1}),Q,s(g,{level:4,id:"dragging"},{default:u((()=>[Z])),_:1}),ee,s(g,{level:4,id:"treeid"},{default:u((()=>[le])),_:1}),ne,s(g,{level:4,id:"tree"},{default:u((()=>[de])),_:1}),ae,oe,s(g,{level:3,id:"computed"},{default:u((()=>[re])),_:1}),s(g,{level:4,id:"visiblenodes"},{default:u((()=>[te])),_:1}),ie,s(g,{level:3,id:"events"},{default:u((()=>[se])),_:1}),s(g,{level:4,id:"fold"},{default:u((()=>[ue])),_:1}),ce,s(g,{level:4,id:"unfold"},{default:u((()=>[ge])),_:1}),pe,s(g,{level:4,id:"load-children"},{default:u((()=>[he])),_:1}),fe,me,s(g,{level:4,id:"load-children-success"},{default:u((()=>[ve])),_:1}),be,_e,s(g,{level:4,id:"load-children-error"},{default:u((()=>[ye])),_:1}),Ne,Se,s(g,{level:3,id:"methods"},{default:u((()=>[De])),_:1}),s(g,{level:4,id:"countchildren"},{default:u((()=>[Ee])),_:1}),Pe,s(g,{level:4,id:"addnode"},{default:u((()=>[Te])),_:1}),Me,s(g,{level:4,id:"movenode"},{default:u((()=>[Be])),_:1}),Fe,s(g,{level:4,id:"removenode"},{default:u((()=>[ke])),_:1}),xe,s(g,{level:4,id:"outputnesteddata"},{default:u((()=>[Le])),_:1}),Ce,s(g,{level:4,id:"outputflatdata"},{default:u((()=>[we])),_:1}),He,s(g,{level:4,id:"isnodeparentfolded"},{default:u((()=>[ze])),_:1}),$e,s(g,{level:4,id:"isnodevisible"},{default:u((()=>[Ie])),_:1}),Ae,s(g,{level:4,id:"foldall"},{default:u((()=>[je])),_:1}),Ke,s(g,{level:4,id:"unfoldall"},{default:u((()=>[Oe])),_:1}),Re,s(g,{level:4,id:"unfold-1"},{default:u((()=>[Xe])),_:1}),Ye,s(g,{level:4,id:"togglefold"},{default:u((()=>[Ve])),_:1}),We,s(g,{level:4,id:"updatechecked"},{default:u((()=>[Ue])),_:1}),Ge,s(g,{level:4,id:"getallcheckednodes"},{default:u((()=>[qe])),_:1}),Je,s(g,{level:2,id:"draggable"},{default:u((()=>[Qe])),_:1}),Ze,s(g,{level:3,id:"props-1"},{default:u((()=>[el])),_:1}),s(g,{level:4,id:"triggerclass"},{default:u((()=>[ll])),_:1}),nl,s(g,{level:4,id:"triggerbyself"},{default:u((()=>[dl])),_:1}),al,s(g,{level:4,id:"draggable-1"},{default:u((()=>[ol])),_:1}),rl,s(g,{level:4,id:"droppable"},{default:u((()=>[tl])),_:1}),il,s(g,{level:4,id:"eachdraggable"},{default:u((()=>[sl])),_:1}),ul,i("p",null,[cl,s(Yn,{to:e.resolveHref("#eachDraggableFunc")},{default:u((()=>[gl])),_:1},8,["to"])]),s(g,{level:4,id:"eachdroppable"},{default:u((()=>[pl])),_:1}),hl,i("p",null,[fl,s(Yn,{to:e.resolveHref("#eachDraggableFunc")},{default:u((()=>[ml])),_:1},8,["to"])]),s(g,{level:4,id:"rootdraggable"},{default:u((()=>[vl])),_:1}),bl,s(g,{level:4,id:"rootdroppable"},{default:u((()=>[_l])),_:1}),yl,s(g,{level:4,id:"ondragstart"},{default:u((()=>[Nl])),_:1}),Sl,Dl,s(g,{level:4,id:"ondragend"},{default:u((()=>[El])),_:1}),Pl,Tl,s(g,{level:4,id:"afterplaceholdercreated"},{default:u((()=>[Ml])),_:1}),Bl,s(g,{level:4,id:"placeholdermaxheight"},{default:u((()=>[Fl])),_:1}),kl,s(g,{level:4,id:"unfoldwhendragover"},{default:u((()=>[xl])),_:1}),Ll,s(g,{level:4,id:"unfoldwhendragoverdelay"},{default:u((()=>[Cl])),_:1}),wl,s(g,{level:4,id:"isnodeunfoldable"},{default:u((()=>[Hl])),_:1}),zl,s(g,{level:4,id:"draggingnodepositionmode"},{default:u((()=>[$l])),_:1}),Il,s(g,{level:4,id:"preventtextselection"},{default:u((()=>[Al])),_:1}),jl,s(g,{level:4,id:"edgescroll"},{default:u((()=>[Kl])),_:1}),Ol,s(g,{level:4,id:"edgescrolltriggermargin"},{default:u((()=>[Rl])),_:1}),Xl,s(g,{level:4,id:"edgescrollspeed"},{default:u((()=>[Yl])),_:1}),Vl,s(g,{level:4,id:"edgescrolltriggermode"},{default:u((()=>[Wl])),_:1}),Ul,s(g,{level:4,id:"edgescrollspecifiedcontainerx"},{default:u((()=>[Gl])),_:1}),ql,s(g,{level:4,id:"edgescrollspecifiedcontainery"},{default:u((()=>[Jl])),_:1}),Ql,s(g,{level:3,id:"data-1"},{default:u((()=>[Zl])),_:1}),s(g,{level:4,id:"draggingnode"},{default:u((()=>[en])),_:1}),ln,s(g,{level:4,id:"store"},{default:u((()=>[nn])),_:1}),dn,an,s(g,{level:3,id:"events-1"},{default:u((()=>[on])),_:1}),s(g,{level:4,id:"drag"},{default:u((()=>[rn])),_:1}),tn,sn,s(g,{level:4,id:"before-first-move"},{default:u((()=>[un])),_:1}),cn,gn,s(g,{level:4,id:"drop"},{default:u((()=>[pn])),_:1}),hn,fn,s(g,{level:4,id:"drop-into"},{default:u((()=>[mn])),_:1}),vn,bn,s(g,{level:4,id:"drop-change"},{default:u((()=>[_n])),_:1}),yn,Nn,s(g,{level:3,id:"methods-1"},{default:u((()=>[Sn])),_:1}),s(g,{level:4,id:"isparentdragging"},{default:u((()=>[Dn])),_:1}),En,s(g,{level:2,id:"other"},{default:u((()=>[Pn])),_:1}),s(g,{level:3,id:"draggable-2"},{default:u((()=>[Tn])),_:1}),Mn,s(g,{level:3,id:"eachdraggablefunc"},{default:u((()=>[Bn])),_:1}),Fn,s(g,{level:3,id:"positionmode"},{default:u((()=>[kn])),_:1}),xn,s(g,{level:3,id:"store3"},{default:u((()=>[Ln])),_:1}),Cn,wn,s(g,{level:3,id:"eventposition"},{default:u((()=>[Hn])),_:1}),zn,s(g,{level:3,id:"eventposition2"},{default:u((()=>[$n])),_:1}),In,s(g,{level:3,id:"obj"},{default:u((()=>[An])),_:1}),jn,s(g,{level:3,id:"basenode"},{default:u((()=>[Kn])),_:1}),On,s(g,{level:3,id:"node"},{default:u((()=>[Rn])),_:1}),Xn])])};export{g as default};

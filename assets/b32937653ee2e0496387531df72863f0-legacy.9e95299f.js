System.register(["./index-legacy.d3df9ce4.js","./DocTemplateBase-legacy.6da93aea.js","./vendor-legacy.95c2d8ab.js"],(function(e){"use strict";var l,n,d,a,o,r,t,i,s,u,c,g;return{setters:[function(e){l=e.u,n=e.d},function(e){d=e._},function(e){a=e.h,o=e.I,r=e.k,t=e.v,i=e.n,s=e.t,u=e.p,c=e.w,g=e.z}],execute:function(){const p=e("default",{extends:d,setup(){const e=o(),d=[{name:"BaseTree",id:"basetree",children:[{name:"props",id:"props",children:[{name:"idKey",id:"idkey",children:[]},{name:"parentIdKey",id:"parentidkey",children:[]},{name:"childrenKey",id:"childrenkey",children:[]},{name:"textKey",id:"textkey",children:[]},{name:"flatData",id:"flatdata",children:[]},{name:"treeData",id:"treedata",children:[]},{name:"indent",id:"indent",children:[]},{name:"gap",id:"gap",children:[]},{name:"rtl",id:"rtl",children:[]},{name:"virtualization",id:"virtualization",children:[]},{name:"virtualizationPrerender",id:"virtualizationprerender",children:[]},{name:"childrenLazyLoading",id:"childrenlazyloading",children:[]},{name:"childrenLoader",id:"childrenloader",children:[]},{name:"defaultFolded",id:"defaultfolded",children:[]}]},{name:"data",id:"data",children:[{name:"nodes",id:"nodes",children:[]},{name:"nodesByID",id:"nodesbyid",children:[]},{name:"trees",id:"trees",children:[]},{name:"dragging",id:"dragging",children:[]},{name:"treeID",id:"treeid",children:[]},{name:"tree",id:"tree",children:[]}]},{name:"computed",id:"computed",children:[{name:"visibleNodes",id:"visiblenodes",children:[]}]},{name:"events",id:"events",children:[{name:"fold",id:"fold",children:[]},{name:"unfold",id:"unfold",children:[]},{name:"load-children",id:"load-children",children:[]},{name:"load-children-success",id:"load-children-success",children:[]},{name:"load-children-error",id:"load-children-error",children:[]}]},{name:"methods",id:"methods",children:[{name:"countChildren",id:"countchildren",children:[]},{name:"addNode",id:"addnode",children:[]},{name:"moveNode",id:"movenode",children:[]},{name:"removeNode",id:"removenode",children:[]},{name:"outputNestedData",id:"outputnesteddata",children:[]},{name:"outputFlatData",id:"outputflatdata",children:[]},{name:"isNodeParentFolded",id:"isnodeparentfolded",children:[]},{name:"isNodeVisible",id:"isnodevisible",children:[]},{name:"foldAll",id:"foldall",children:[]},{name:"unfoldAll",id:"unfoldall",children:[]},{name:"unfold",id:"unfold-1",children:[]},{name:"toggleFold",id:"togglefold",children:[]},{name:"updateChecked",id:"updatechecked",children:[]},{name:"getAllCheckedNodes",id:"getallcheckednodes",children:[]}]}]},{name:"Draggable",id:"draggable",children:[{name:"props",id:"props-1",children:[{name:"triggerClass",id:"triggerclass",children:[]},{name:"triggerBySelf",id:"triggerbyself",children:[]},{name:"draggable",id:"draggable-1",children:[]},{name:"droppable",id:"droppable",children:[]},{name:"eachDraggable",id:"eachdraggable",children:[]},{name:"eachDroppable",id:"eachdroppable",children:[]},{name:"rootDraggable",id:"rootdraggable",children:[]},{name:"rootDroppable",id:"rootdroppable",children:[]},{name:"ondragstart",id:"ondragstart",children:[]},{name:"ondragend",id:"ondragend",children:[]},{name:"afterPlaceholderCreated",id:"afterplaceholdercreated",children:[]},{name:"placeholderMaxHeight",id:"placeholdermaxheight",children:[]},{name:"unfoldWhenDragover",id:"unfoldwhendragover",children:[]},{name:"unfoldWhenDragoverDelay",id:"unfoldwhendragoverdelay",children:[]},{name:"isNodeUnfoldable",id:"isnodeunfoldable",children:[]},{name:"draggingNodePositionMode",id:"draggingnodepositionmode",children:[]},{name:"preventTextSelection",id:"preventtextselection",children:[]},{name:"edgeScroll",id:"edgescroll",children:[]},{name:"edgeScrollTriggerMargin",id:"edgescrolltriggermargin",children:[]},{name:"edgeScrollSpeed",id:"edgescrollspeed",children:[]},{name:"edgeScrollTriggerMode",id:"edgescrolltriggermode",children:[]},{name:"edgeScrollSpecifiedContainerX",id:"edgescrollspecifiedcontainerx",children:[]},{name:"edgeScrollSpecifiedContainerY",id:"edgescrollspecifiedcontainery",children:[]}]},{name:"data",id:"data-1",children:[{name:"draggingNode",id:"draggingnode",children:[]},{name:"store",id:"store",children:[]}]},{name:"events",id:"events-1",children:[{name:"drag",id:"drag",children:[]},{name:"before-first-move",id:"before-first-move",children:[]},{name:"drop",id:"drop",children:[]},{name:"drop-into",id:"drop-into",children:[]},{name:"drop-change",id:"drop-change",children:[]}]},{name:"methods",id:"methods-1",children:[{name:"isParentDragging",id:"isparentdragging",children:[]}]}]},{name:"Other",id:"other",children:[{name:"Draggable",id:"draggable-2",children:[]},{name:"eachDraggableFunc",id:"eachdraggablefunc",children:[]},{name:"PositionMode",id:"positionmode",children:[]},{name:"Store3",id:"store3",children:[]},{name:"EventPosition",id:"eventposition",children:[]},{name:"EventPosition2",id:"eventposition2",children:[]},{name:"obj",id:"obj",children:[]},{name:"BaseNode",id:"basenode",children:[]},{name:"Node",id:"node",children:[]}]}];l("API",e),n.value=d,a((()=>{n.value=null}))}}),f={class:"docs-view"},h={class:"article mt-14 mb-8 prose"},m=g("API"),v=g("BaseTree"),b=g("props"),_=g("idKey"),y=s("pre",null,[s("code",{class:"language-ts"},'{ type: String, default: "id" }\n')],-1),N=g("parentIdKey"),S=s("pre",null,[s("code",{class:"language-ts"},'{ type: String, default: "parent_id" }\n')],-1),D=g("childrenKey"),P=s("pre",null,[s("code",{class:"language-ts"},'{ type: String, default: "children" }\n')],-1),E=g("textKey"),T=s("pre",null,[s("code",{class:"language-ts"},'{ type: String, default: "text" }\n')],-1),M=g("flatData"),B=s("pre",null,[s("code",{class:"language-ts"},"{\n  type: Array\n}\n")],-1),k=g("treeData"),x=s("pre",null,[s("code",{class:"language-ts"},"{\n  type: Array\n}\n")],-1),L=g("indent"),C=s("pre",null,[s("code",{class:"language-ts"},"{ type: Number, default: 20 }\n")],-1),F=g("gap"),H=s("pre",null,[s("code",{class:"language-ts"},"{\n  type: Number\n}\n")],-1),$=g("rtl"),I=s("pre",null,[s("code",{class:"language-ts"},"{ type: Boolean, default: false }\n")],-1),w=g("virtualization"),z=s("pre",null,[s("code",{class:"language-ts"},"{ type: Boolean, default: false }\n")],-1),A=g("virtualizationPrerender"),j=s("pre",null,[s("code",{class:"language-ts"},"{ type: Number, default: 20 }\n")],-1),K=g("childrenLazyLoading"),O=s("pre",null,[s("code",{class:"language-ts"},"{ type: Boolean, default: false }\n")],-1),R=g("childrenLoader"),X=s("pre",null,[s("code",{class:"language-ts"},"(\n  node: Node,\n  vm: ComponentPublicInstance\n) => Promise<Node[]>;\n")],-1),Y=g("defaultFolded"),V=s("pre",null,[s("code",{class:"language-ts"},"{ type: Boolean, default: false }\n")],-1),W=g("data"),U=g("nodes"),q=s("pre",null,[s("code",{class:"language-ts"},"Node[]\n")],-1),G=g("nodesByID"),J=s("pre",null,[s("code",{class:"language-ts"},"Record<string, Node>\n")],-1),Q=g("trees"),Z=s("pre",null,[s("code",{class:"language-ts"},"{[treeID:string]: Node}\n")],-1),ee=g("dragging"),le=s("pre",null,[s("code",{class:"language-ts"},"boolean\n")],-1),ne=g("treeID"),de=s("pre",null,[s("code",{class:"language-ts"},"string\n")],-1),ae=g("tree"),oe=s("p",null,"vm of tree",-1),re=s("pre",null,[s("code",{class:"language-ts"},"this\n")],-1),te=g("computed"),ie=g("visibleNodes"),se=s("pre",null,[s("code",{class:"language-ts"},"Node[]\n")],-1),ue=g("events"),ce=g("fold"),ge=s("p",null,"折叠节点时触发.",-1),pe=s("pre",null,[s("code",{class:"language-ts"},"(node: Node)\n")],-1),fe=g("unfold"),he=s("p",null,"打开节点时触发.",-1),me=s("pre",null,[s("code",{class:"language-ts"},"(node: Node)\n")],-1),ve=g("load-children"),be=s("p",null,"针对子节点延迟加载. 加载子节点时触发.",-1),_e=s("pre",null,[s("code",{class:"language-ts"},"(node: Node)\n")],-1),ye=g("load-children-success"),Ne=s("p",null,"针对子节点延迟加载. 加载子节点成功时触发.",-1),Se=s("pre",null,[s("code",{class:"language-ts"},"(node: Node)\n")],-1),De=g("load-children-error"),Pe=s("p",null,[g("针对子节点延迟加载. 加载子节点失败时触发. 通过"),s("code",null,"node.$childrenLoadStaus.error"),g("获取错误信息.")],-1),Ee=s("pre",null,[s("code",{class:"language-ts"},"(node: Node)\n")],-1),Te=g("methods"),Me=g("countChildren"),Be=s("pre",null,[s("code",{class:"language-ts"},"(node: Node | undefined): number\n")],-1),ke=g("addNode"),xe=s("pre",null,[s("code",{class:"language-ts"},"(node: obj, parentId: number | string | null, index?: number): void;\n")],-1),Le=g("moveNode"),Ce=s("pre",null,[s("code",{class:"language-ts"},"(node: Node, parentId: number | string | null, index?: number): void;\n")],-1),Fe=g("removeNode"),He=s("pre",null,[s("code",{class:"language-ts"},"(node: Node): void;\n")],-1),$e=g("outputNestedData"),Ie=s("pre",null,[s("code",{class:"language-ts"},"(parent: Node | null, ignoreKeys?: string[], _returnFlat?: boolean | undefined): obj[];\n")],-1),we=g("outputFlatData"),ze=s("pre",null,[s("code",{class:"language-ts"},"(parent: Node | null, ignoreKeys?: string[]): Record<string, unknown>[];\n")],-1),Ae=g("isNodeParentFolded"),je=s("pre",null,[s("code",{class:"language-ts"},"(node: Node): boolean;\n")],-1),Ke=g("isNodeVisible"),Oe=s("pre",null,[s("code",{class:"language-ts"},"(node: Node): boolean;\n")],-1),Re=g("foldAll"),Xe=s("pre",null,[s("code",{class:"language-ts"},"(): void;\n")],-1),Ye=g("unfoldAll"),Ve=s("pre",null,[s("code",{class:"language-ts"},"(node?: Node | undefined): Promise<void> | undefined;\n")],-1),We=g("unfold"),Ue=s("pre",null,[s("code",{class:"language-ts"},"(node: Node): void | Promise<void>;\n")],-1),qe=g("toggleFold"),Ge=s("pre",null,[s("code",{class:"language-ts"},"(node: Node): void | Promise<void>;\n")],-1),Je=g("updateChecked"),Qe=s("pre",null,[s("code",{class:"language-ts"},"(node: Node): void;\n")],-1),Ze=g("getAllCheckedNodes"),el=s("pre",null,[s("code",{class:"language-ts"},"(): Node[];\n")],-1),ll=g("Draggable"),nl=s("p",null,"拖拽树组件. 继承于 BaseTree.",-1),dl=g("props"),al=g("triggerClass"),ol=s("pre",null,[s("code",{class:"language-ts"},'{ type: String, default: "tree-node" }\n')],-1),rl=g("triggerBySelf"),tl=s("pre",null,[s("code",{class:"language-ts"},"Boolean\n")],-1),il=g("draggable"),sl=s("pre",null,[s("code",{class:"language-ts"},"{ type: Boolean, default: true }\n")],-1),ul=g("droppable"),cl=s("pre",null,[s("code",{class:"language-ts"},"{ type: Boolean, default: true }\n")],-1),gl=g("eachDraggable"),pl=s("pre",null,[s("code",{class:"language-ts"},"{\n  type: [Boolean, Function]\n}\n")],-1),fl=g("方法类型是 "),hl=g("eachDraggableFunc"),ml=g("eachDroppable"),vl=s("pre",null,[s("code",{class:"language-ts"},"{\n  type: [Boolean, Function]\n}\n")],-1),bl=g("方法类型是 "),_l=g("eachDraggableFunc"),yl=g("rootDraggable"),Nl=s("pre",null,[s("code",{class:"language-ts"},"{ type: Boolean, default: true }\n")],-1),Sl=g("rootDroppable"),Dl=s("pre",null,[s("code",{class:"language-ts"},"{ type: Boolean, default: true }\n")],-1),Pl=g("ondragstart"),El=s("pre",null,[s("code",{class:"language-ts"},"{\n  type: Function as PropType<(store: Store3) => boolean>\n}\n")],-1),Tl=s("p",null,[s("strong",null,[s("code",null,"ondragend"),g(" 支持 promise, 但 "),s("code",null,"ondragstart"),g(" 不支持.")])],-1),Ml=g("ondragend"),Bl=s("pre",null,[s("code",{class:"language-ts"},"{\n  type: Function as PropType<(store: Store3) => boolean>\n}\n")],-1),kl=s("p",null,[s("strong",null,[s("code",null,"ondragend"),g(" 支持 promise, 但 "),s("code",null,"ondragstart"),g(" 不支持.")])],-1),xl=g("afterPlaceholderCreated"),Ll=s("pre",null,[s("code",{class:"language-ts"},"(placeholder: HTMLElement, store: Store3) => void\n")],-1),Cl=g("placeholderMaxHeight"),Fl=s("pre",null,[s("code",{class:"language-ts"},"{ type: Number, default: 100 }\n")],-1),Hl=g("unfoldWhenDragover"),$l=s("pre",null,[s("code",{class:"language-ts"},"{ type: Boolean, default: true }\n")],-1),Il=g("unfoldWhenDragoverDelay"),wl=s("pre",null,[s("code",{class:"language-ts"},"{ type: Number, default: 80 }\n")],-1),zl=g("isNodeUnfoldable"),Al=s("pre",null,[s("code",{class:"language-ts"},"{\ntype: Function as PropType<(store: Store3) => boolean>,\n}\n")],-1),jl=g("draggingNodePositionMode"),Kl=s("pre",null,[s("code",{class:"language-ts"},'{\ntype: String as PropType<PositionMode>,\ndefault: "top_left_corner",\n}\n')],-1),Ol=g("preventTextSelection"),Rl=s("pre",null,[s("code",{class:"language-ts"},"{ type: Boolean, default: true }\n")],-1),Xl=g("edgeScroll"),Yl=s("pre",null,[s("code",{class:"language-ts"},"{\n  type: Boolean\n}\n")],-1),Vl=g("edgeScrollTriggerMargin"),Wl=s("pre",null,[s("code",{class:"language-ts"},"{ type: Number, default: 50 }\n")],-1),Ul=g("edgeScrollSpeed"),ql=s("pre",null,[s("code",{class:"language-ts"},"{ type: Number, default: 0.35 }\n")],-1),Gl=g("edgeScrollTriggerMode"),Jl=s("pre",null,[s("code",{class:"language-ts"},'{\ntype: String as PropType<PositionMode>,\ndefault: "top_left_corner",\n}\n')],-1),Ql=g("edgeScrollSpecifiedContainerX"),Zl=s("pre",null,[s("code",{class:"language-ts"},"HTMLElement | ((store: Store3) => HTMLElement)\n")],-1),en=g("edgeScrollSpecifiedContainerY"),ln=s("pre",null,[s("code",{class:"language-ts"},"HTMLElement | ((store: Store3) => HTMLElement)\n")],-1),nn=g("data"),dn=g("draggingNode"),an=s("pre",null,[s("code",{class:"language-ts"},"Node | null\n")],-1),on=g("store"),rn=s("p",null,"拖拽过程中的相关数据.",-1),tn=s("pre",null,[s("code",{class:"language-ts"},"Store3 | null\n")],-1),sn=g("events"),un=g("drag"),cn=s("p",null,"拖拽开始时触发.",-1),gn=s("pre",null,[s("code",{class:"language-ts"},"(store: Store3)\n")],-1),pn=g("before-first-move"),fn=s("p",null,[g("与"),s("code",null,"drag"),g("相同并同时触发.")],-1),hn=s("pre",null,[s("code",{class:"language-ts"},"(store: Store3)\n")],-1),mn=g("drop"),vn=s("p",null,"拖拽结束时触发. 触发到拖拽开始树.",-1),bn=s("pre",null,[s("code",{class:"language-ts"},"(store: Store3)\n")],-1),_n=g("drop-into"),yn=s("p",null,"拖拽结束时触发. 触发到拖拽目标树(如果拖拽开始的树和结束的不是同一颗树, 即跨树).",-1),Nn=s("pre",null,[s("code",{class:"language-ts"},"(store: Store3)\n")],-1),Sn=g("drop-change"),Dn=s("p",null,"拖拽结束时触发. 同时触发到拖拽开始和目标树.",-1),Pn=s("pre",null,[s("code",{class:"language-ts"},"(store: Store3)\n")],-1),En=g("methods"),Tn=g("isParentDragging"),Mn=s("pre",null,[s("code",{class:"language-ts"},"(node: Node): boolean;\n")],-1),Bn=g("Other"),kn=g("Draggable"),xn=s("p",null,"Draggable 组件的 Vue 实例(vm).",-1),Ln=g("eachDraggableFunc"),Cn=s("pre",null,[s("code",{class:"language-ts"},";(node: Node | undefined, store: Store3, options: Options2, vm: Draggable) =>\n  boolean | undefined\n")],-1),Fn=g("PositionMode"),Hn=s("pre",null,[s("code",{class:"language-ts"},"'top_left_corner' | 'mouse'\n")],-1),$n=g("Store3"),In=s("p",null,"拖拽过程中的相关数据.",-1),wn=s("pre",null,[s("code",{class:"language-ts"},'interface {\n  // Store\n  movedCount: number;\n  listenerElement: HTMLElement;\n  directTriggerElement: HTMLElement;\n  triggerElement: HTMLElement;\n  startEvent: MouseOrTouchEvent;\n  moveEvent: MouseOrTouchEvent;\n  endEvent: MouseOrTouchEvent;\n  mouse: EventPosition;\n  initialMouse: EventPosition;\n  move: EventPosition2;\n  movedOrClonedElement: HTMLElement;\n  movedElement: HTMLElement;\n  initialPosition: EventPosition2;\n  initialPositionRelativeToViewport: EventPosition2;\n  updateMovedElementStyle: () => void;\n  _isMovingElementCloned: boolean;\n  // Store2\n  startTreeEl: HTMLElement;\n  targetTreeEl: HTMLElement;\n  placeholder: HTMLElement;\n  // Store3\n  startTree: Draggable;\n  targetTree: Draggable;\n  draggingNode: Node;\n  startPath: {\n      tree: Draggable;\n      parent?: Node;\n      index: number;\n  };\n  targetPath: Store3["startPath"]; // same to startPath\n  placeholderLevel: number;\n  placeholderPrevNode?: Node;\n  placeholderPrevNodeInTree?: Node;\n  dragChanged?: boolean;\n  isCloned?: boolean;\n}\n')],-1),zn=g("EventPosition"),An=s("pre",null,[s("code",{class:"language-ts"},"{\n  x: number, y: number,\n  pageX: number,\n  pageY: number,\n  clientX: number,\n  clientY: number,\n  screenX: number,\n  screenY: number\n}\n")],-1),jn=g("EventPosition2"),Kn=s("pre",null,[s("code",{class:"language-ts"},"{\n  x: number\n  y: number\n}\n")],-1),On=g("obj"),Rn=s("pre",null,[s("code",{class:"language-ts"},"{\n  string: unknown\n}\n")],-1),Xn=g("BaseNode"),Yn=s("pre",null,[s("code",{class:"language-ts"},"{\n    $id: string | number;\n    $pid?: string | number;\n    $level: number;\n    $hidden?: boolean;\n    $folded?: boolean;\n    $checked?: boolean | 0;\n    $children: Node[];\n    $childrenLoading?: boolean;\n    $childrenLoadStaus?: {\n      status: 'success'|'error',\n      error: Error\n    };\n    $draggable?: boolean;\n    $droppable?: boolean;\n    $nodeStyle?: string | Record<string, string> | unknown;\n    $nodeClass?: string | unknown;\n    $outerStyle?: string | Record<string, string> | unknown;\n    $outerClass?: string | unknown;\n}\n")],-1),Vn=g("Node"),Wn=s("pre",null,[s("code",{class:"language-ts"},"obj & BaseNode\n")],-1);p.render=function(e,l,n,d,a,o){const g=r("vheading"),p=r("Anchor");return t(),i("div",f,[s("div",h,[u(g,{level:1,id:"api"},{default:c((()=>[m])),_:1}),u(g,{level:2,id:"basetree"},{default:c((()=>[v])),_:1}),u(g,{level:3,id:"props"},{default:c((()=>[b])),_:1}),u(g,{level:4,id:"idkey"},{default:c((()=>[_])),_:1}),y,u(g,{level:4,id:"parentidkey"},{default:c((()=>[N])),_:1}),S,u(g,{level:4,id:"childrenkey"},{default:c((()=>[D])),_:1}),P,u(g,{level:4,id:"textkey"},{default:c((()=>[E])),_:1}),T,u(g,{level:4,id:"flatdata"},{default:c((()=>[M])),_:1}),B,u(g,{level:4,id:"treedata"},{default:c((()=>[k])),_:1}),x,u(g,{level:4,id:"indent"},{default:c((()=>[L])),_:1}),C,u(g,{level:4,id:"gap"},{default:c((()=>[F])),_:1}),H,u(g,{level:4,id:"rtl"},{default:c((()=>[$])),_:1}),I,u(g,{level:4,id:"virtualization"},{default:c((()=>[w])),_:1}),z,u(g,{level:4,id:"virtualizationprerender"},{default:c((()=>[A])),_:1}),j,u(g,{level:4,id:"childrenlazyloading"},{default:c((()=>[K])),_:1}),O,u(g,{level:4,id:"childrenloader"},{default:c((()=>[R])),_:1}),X,u(g,{level:4,id:"defaultfolded"},{default:c((()=>[Y])),_:1}),V,u(g,{level:3,id:"data"},{default:c((()=>[W])),_:1}),u(g,{level:4,id:"nodes"},{default:c((()=>[U])),_:1}),q,u(g,{level:4,id:"nodesbyid"},{default:c((()=>[G])),_:1}),J,u(g,{level:4,id:"trees"},{default:c((()=>[Q])),_:1}),Z,u(g,{level:4,id:"dragging"},{default:c((()=>[ee])),_:1}),le,u(g,{level:4,id:"treeid"},{default:c((()=>[ne])),_:1}),de,u(g,{level:4,id:"tree"},{default:c((()=>[ae])),_:1}),oe,re,u(g,{level:3,id:"computed"},{default:c((()=>[te])),_:1}),u(g,{level:4,id:"visiblenodes"},{default:c((()=>[ie])),_:1}),se,u(g,{level:3,id:"events"},{default:c((()=>[ue])),_:1}),u(g,{level:4,id:"fold"},{default:c((()=>[ce])),_:1}),ge,pe,u(g,{level:4,id:"unfold"},{default:c((()=>[fe])),_:1}),he,me,u(g,{level:4,id:"load-children"},{default:c((()=>[ve])),_:1}),be,_e,u(g,{level:4,id:"load-children-success"},{default:c((()=>[ye])),_:1}),Ne,Se,u(g,{level:4,id:"load-children-error"},{default:c((()=>[De])),_:1}),Pe,Ee,u(g,{level:3,id:"methods"},{default:c((()=>[Te])),_:1}),u(g,{level:4,id:"countchildren"},{default:c((()=>[Me])),_:1}),Be,u(g,{level:4,id:"addnode"},{default:c((()=>[ke])),_:1}),xe,u(g,{level:4,id:"movenode"},{default:c((()=>[Le])),_:1}),Ce,u(g,{level:4,id:"removenode"},{default:c((()=>[Fe])),_:1}),He,u(g,{level:4,id:"outputnesteddata"},{default:c((()=>[$e])),_:1}),Ie,u(g,{level:4,id:"outputflatdata"},{default:c((()=>[we])),_:1}),ze,u(g,{level:4,id:"isnodeparentfolded"},{default:c((()=>[Ae])),_:1}),je,u(g,{level:4,id:"isnodevisible"},{default:c((()=>[Ke])),_:1}),Oe,u(g,{level:4,id:"foldall"},{default:c((()=>[Re])),_:1}),Xe,u(g,{level:4,id:"unfoldall"},{default:c((()=>[Ye])),_:1}),Ve,u(g,{level:4,id:"unfold-1"},{default:c((()=>[We])),_:1}),Ue,u(g,{level:4,id:"togglefold"},{default:c((()=>[qe])),_:1}),Ge,u(g,{level:4,id:"updatechecked"},{default:c((()=>[Je])),_:1}),Qe,u(g,{level:4,id:"getallcheckednodes"},{default:c((()=>[Ze])),_:1}),el,u(g,{level:2,id:"draggable"},{default:c((()=>[ll])),_:1}),nl,u(g,{level:3,id:"props-1"},{default:c((()=>[dl])),_:1}),u(g,{level:4,id:"triggerclass"},{default:c((()=>[al])),_:1}),ol,u(g,{level:4,id:"triggerbyself"},{default:c((()=>[rl])),_:1}),tl,u(g,{level:4,id:"draggable-1"},{default:c((()=>[il])),_:1}),sl,u(g,{level:4,id:"droppable"},{default:c((()=>[ul])),_:1}),cl,u(g,{level:4,id:"eachdraggable"},{default:c((()=>[gl])),_:1}),pl,s("p",null,[fl,u(p,{to:e.resolveHref("#eachDraggableFunc")},{default:c((()=>[hl])),_:1},8,["to"])]),u(g,{level:4,id:"eachdroppable"},{default:c((()=>[ml])),_:1}),vl,s("p",null,[bl,u(p,{to:e.resolveHref("#eachDraggableFunc")},{default:c((()=>[_l])),_:1},8,["to"])]),u(g,{level:4,id:"rootdraggable"},{default:c((()=>[yl])),_:1}),Nl,u(g,{level:4,id:"rootdroppable"},{default:c((()=>[Sl])),_:1}),Dl,u(g,{level:4,id:"ondragstart"},{default:c((()=>[Pl])),_:1}),El,Tl,u(g,{level:4,id:"ondragend"},{default:c((()=>[Ml])),_:1}),Bl,kl,u(g,{level:4,id:"afterplaceholdercreated"},{default:c((()=>[xl])),_:1}),Ll,u(g,{level:4,id:"placeholdermaxheight"},{default:c((()=>[Cl])),_:1}),Fl,u(g,{level:4,id:"unfoldwhendragover"},{default:c((()=>[Hl])),_:1}),$l,u(g,{level:4,id:"unfoldwhendragoverdelay"},{default:c((()=>[Il])),_:1}),wl,u(g,{level:4,id:"isnodeunfoldable"},{default:c((()=>[zl])),_:1}),Al,u(g,{level:4,id:"draggingnodepositionmode"},{default:c((()=>[jl])),_:1}),Kl,u(g,{level:4,id:"preventtextselection"},{default:c((()=>[Ol])),_:1}),Rl,u(g,{level:4,id:"edgescroll"},{default:c((()=>[Xl])),_:1}),Yl,u(g,{level:4,id:"edgescrolltriggermargin"},{default:c((()=>[Vl])),_:1}),Wl,u(g,{level:4,id:"edgescrollspeed"},{default:c((()=>[Ul])),_:1}),ql,u(g,{level:4,id:"edgescrolltriggermode"},{default:c((()=>[Gl])),_:1}),Jl,u(g,{level:4,id:"edgescrollspecifiedcontainerx"},{default:c((()=>[Ql])),_:1}),Zl,u(g,{level:4,id:"edgescrollspecifiedcontainery"},{default:c((()=>[en])),_:1}),ln,u(g,{level:3,id:"data-1"},{default:c((()=>[nn])),_:1}),u(g,{level:4,id:"draggingnode"},{default:c((()=>[dn])),_:1}),an,u(g,{level:4,id:"store"},{default:c((()=>[on])),_:1}),rn,tn,u(g,{level:3,id:"events-1"},{default:c((()=>[sn])),_:1}),u(g,{level:4,id:"drag"},{default:c((()=>[un])),_:1}),cn,gn,u(g,{level:4,id:"before-first-move"},{default:c((()=>[pn])),_:1}),fn,hn,u(g,{level:4,id:"drop"},{default:c((()=>[mn])),_:1}),vn,bn,u(g,{level:4,id:"drop-into"},{default:c((()=>[_n])),_:1}),yn,Nn,u(g,{level:4,id:"drop-change"},{default:c((()=>[Sn])),_:1}),Dn,Pn,u(g,{level:3,id:"methods-1"},{default:c((()=>[En])),_:1}),u(g,{level:4,id:"isparentdragging"},{default:c((()=>[Tn])),_:1}),Mn,u(g,{level:2,id:"other"},{default:c((()=>[Bn])),_:1}),u(g,{level:3,id:"draggable-2"},{default:c((()=>[kn])),_:1}),xn,u(g,{level:3,id:"eachdraggablefunc"},{default:c((()=>[Ln])),_:1}),Cn,u(g,{level:3,id:"positionmode"},{default:c((()=>[Fn])),_:1}),Hn,u(g,{level:3,id:"store3"},{default:c((()=>[$n])),_:1}),In,wn,u(g,{level:3,id:"eventposition"},{default:c((()=>[zn])),_:1}),An,u(g,{level:3,id:"eventposition2"},{default:c((()=>[jn])),_:1}),Kn,u(g,{level:3,id:"obj"},{default:c((()=>[On])),_:1}),Rn,u(g,{level:3,id:"basenode"},{default:c((()=>[Xn])),_:1}),Yn,u(g,{level:3,id:"node"},{default:c((()=>[Vn])),_:1}),Wn])])}}}}));
